name: Python Pytest

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pylint pytest-cov
        python setup.py install

    - name: Lint with pylint
      run: |
        STAT=$(pylint $(git ls-files '*.py') |grep -o "at.*(" | cut -d ' ' -f3)
        echo $STAT
        OUTPUT="Last pylint run status: ${OUTPUT}"
        echo "## ${OUTPUT}" >> $GITHUB_STEP_SUMMARY
        echo "MESSAGE=$OUTPUT" >> $GITHUB_ENV

    - name: Post pylint result to PR
      if: github.event_name == 'pull_request'
      uses: mshick/add-pr-comment@v1
      with:
        message: ${{ env.MESSAGE }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'
        allow-repeats: false

    - name: Test with pytest
      id: pytest
      run: |
          pytest tests/ --doctest-modules \
            --junitxml=junit/test-results.xml \
            --cov=com --cov-report=xml --cov-report=html

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/linux@v2
      with:
        files: |
          junit/test-results.xml
